(name 'STON-Core-fn.59' message 'Export STON-Core SvenVanCaekenberghe.58' id '1b5948ba-5383-41f4-a262-064dfd8037f3' date '22 February 2016' time '9:47:25.143087 pm' author 'fn' ancestors ((name 'STON-Core-SvenVanCaekenberghe.58' message 'Critics run.Change generic Object>>#fromSton: and Object>>#toSton: so that it no longer uses #subclassResponsibility but a custom error because not all subclasses should implement it (duh)Introduction of STONReader>>#parseNamedInstVarsFor: and use it in Object>>#fromSton: Text>>#fromSton: and RunArray>>#fromSton: to centralize #instVarNamed:put: usage' id '2a3cb03d-87ec-4f43-93d0-7dfee3a5374a' date '28 May 2015' time '3:57:20.06657 pm' author 'SvenVanCaekenberghe' ancestors ((name 'STON-Core-SvenVanCaekenberghe.57' message 'Added STONReader>>#convertNewLines: and STONReader>>#newLine: to read and convert CR, LF, or CRLF inside strings and symbols as one chosen canonical newLineAdded STONWriter>>#keepNewLines: to write CR, LF or CRLF inside strings and symbols unencoded as one chosen canonical newLine Add unit tests #testConvertingNewLine #testKeepingNewLines and #testIllegalCharacterEscapesAdded some more documentation' id 'f38b0222-94ea-4a0a-9878-03649843c97e' date '26 April 2015' time '11:53:58.308533 pm' author 'SvenVanCaekenberghe' ancestors ((name 'STON-Core-SvenVanCaekenberghe.56' message 'Remove support for TimeStamp as it is deprecated in Pharo 4 and removed in Pharo 5' id '10a69541-18b3-45c7-87a0-9a7253f7b0b9' date '26 April 2015' time '7:47:09.924067 pm' author 'SvenVanCaekenberghe' ancestors ((name 'STON-Core-SvenVanCaekenberghe.55' message 'Added support for OrderedDictionary' id '02785c4b-2c8c-467b-a6eb-1032fe8d17d7' date '10 April 2015' time '3:32:16.386165 pm' author 'SvenVanCaekenberghe' ancestors ((name 'STON-Core-SvenVanCaekenberghe.54' message 'Add an implementation comment to STONReader>>#parseMapDo:' id '688ad244-e768-4925-872a-c6009fd2a944' date '27 November 2014' time '12:55:09.308514 pm' author 'SvenVanCaekenberghe' ancestors ((name 'STON-Core-SvenVanCaekenberghe.53' message 'Minor modifications after merging Christophe''s new Association support (some simplifications, allow nested associations, don''t use in #parseMapDo: for performance reasons).Added Object class>>#stonAllInstVarNames to allow customizing which instance variables get written or their order (see STONWriter>>#writeObject:)' id 'da9e3d4d-4f27-45df-94bf-2c92c9c69c89' date '27 November 2014' time '11:20:24.300261 am' author 'SvenVanCaekenberghe' ancestors ((name 'STON-Core-ChristopheDemarey.52' message 'Add support for associations as ''primitive'' type.' id '5c75bc2b-d338-4ea3-af98-02e43eab43ff' date '7 November 2014' time '9:57:33.962291 am' author 'ChristopheDemarey' ancestors ((name 'STON-Core-SvenVanCaekenberghe.51' message 'Add STONReader>#acceptUnknownClasses: optionWhen true (default is false) an unknown object class will result in a map with an added property #className (thx StÃ©phane Ducasse for the suggetion)Added STON class>>#classNameKeyMoved #stonName from Class to Object classAdded STONReaderTests>>#testUnknownClasses' id '6559f648-b74a-4901-b249-e72808fdea0d' date '12 August 2014' time '3:40:21.574545 pm' author 'SvenVanCaekenberghe' ancestors ((name 'STON-Core-SvenVanCaekenberghe.49' message 'Fix to allow working with the empty Symbol #'''' (changed STONWriter>>#isSimpleSymbol: to return false for the empty symbol) [Thx Martin - tinchodias]' id 'b5e2e82b-b296-46ff-b275-3040d055e7bc' date '15 April 2014' time '2:16:03.216352 pm' author 'SvenVanCaekenberghe' ancestors ((name 'STON-Core-SvenVanCaekenberghe.48' message 'Added explicit #stonOn: and #fromSton: methods to Text and RunArray who are inheriting the wrong behavior + unit test' id 'd56b9e2a-a712-4edd-b1db-a4dfe7d9ad3b' date '24 March 2014' time '2:29:29.547772 pm' author 'SvenVanCaekenberghe' ancestors ((name 'STON-Core-SvenVanCaekenberghe.47' message 'Modify STONReader>>#error: to remain compatible with streams that don''t understand #position' id 'ffbdccdd-6a3c-4053-b90a-fa0f7ec2217f' date '13 December 2013' time '4:27:38.680392 pm' author 'SvenVanCaekenberghe' ancestors ((name 'STON-Core-DamienCassou.46' message '- Display the position where the input error has been found' id '18cce271-f166-4115-a497-4f651b599275' date '9 December 2013' time '1:31:17.367199 pm' author 'DamienCassou' ancestors ((name 'STON-Core-SvenVanCaekenberghe.45' message 'Changed the implementation of STONWriter>>#writeObject: to skip nil instance variables unless Object>>#stonShouldWriteNilInstVars is overridden to be true' id '46c8ccc1-35f1-4f1b-be48-ff873ef99f2f' date '14 November 2013' time '12:02:29.390375 am' author 'SvenVanCaekenberghe' ancestors ((name 'STON-Core-SvenVanCaekenberghe.44' message 'Added support for Small[Identity]Dictionary' id 'd0e318c2-2878-4586-a122-f8ec96186e5f' date '17 September 2013' time '8:17:17.237565 pm' author 'SvenVanCaekenberghe' ancestors ((name 'STON-Core-SvenVanCaekenberghe.43' message 'Added custom newline support to STONWriter' id '824c9f51-461a-4b92-92fb-861b2722d5f7' date '7 March 2013' time '10:51:24.226 am' author 'SvenVanCaekenberghe' ancestors ((name 'STON-Core-SvenVanCaekenberghe.42' message 'minor refactoring using #peekFor:' id 'b1ce0d4c-6029-4f7f-b617-4833005155a8' date '3 December 2012' time '11:13:17.675 am' author 'SvenVanCaekenberghe' ancestors ((name 'STON-Core-SvenVanCaekenberghe.41' message 'replace all ''do-nothing'' implementations of #stonProcessSubObjects: with the new #stonContainSubObjects returning false;rewrote STONReader>>#processSubObjects: to use this to shortcircuit doing sub processing (thx Norbert Hartl for the suggestion)' id 'd1218bc7-e5bc-4b8e-9ec2-d102b1264a25' date '29 November 2012' time '4:57:15.739 pm' author 'SvenVanCaekenberghe' ancestors ((name 'STON-Core-SvenVanCaekenberghe.40' message 'make #optimizeForLargeStructures do nothing when the Fuel classes are missing' id '9f2a085f-b279-4d6c-895e-e57082139f35' date '29 November 2012' time '3:56:19.595 pm' author 'SvenVanCaekenberghe' ancestors ((name 'STON-Core-SvenVanCaekenberghe.39' message 'changed STONReader>>#processSubObjectsOf: from a recursive to an iterative process using a stack (as suggested by Norbert Hartl);added #optimizeForLargeStructures to STONReader and STONWriter to use some special Fuel datastructures optimized for large sizes (these are standard in Pharo)' id '9d8ce1ba-3a6e-4c8c-98da-85f32816e2cd' date '29 November 2012' time '3:43:05.957 pm' author 'SvenVanCaekenberghe' ancestors ((name 'STON-Core-SvenVanCaekenberghe.38' message 'fixed a bug that prevented object structures with cycles from being materialized (as reported with an excellent test case by Stuart Herring): STONReader>>#parseReference will no longer resolve references eagerly since that led to cycles in #processSubObjectsOf:moved most logic from Object>>#stonOn: to STONWriter>>#writeObject: while adding a shortcut for objects without instance variables;add STONReference>>#printOn: to ease debugging' id 'a1e38a45-29ff-4267-ba97-1c21e21d519d' date '29 November 2012' time '12:12:04.605 pm' author 'SvenVanCaekenberghe' ancestors ((name 'STON-Core-SvenVanCaekenberghe.37' message 'this is a copy of Ston-Core-SvenVanCaekenberghe.36 with the monticello package name changed from Ston-Core to STON-Core' id 'ba8612a2-47a2-4d81-9a7e-468f4d9aefd5' date '26 October 2012' time '10:36:37.792 am' author 'SvenVanCaekenberghe' ancestors () stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())